@using Web.Areas.Employee.Models.ViewModels

@{
    Layout = null;
    var covs = ViewBag.COV as List<ProductOptionValueViewModels.Pov>;
    var dynamics = ViewBag.Dynamics as List<CustomerViewModels.EditDynamicSelect>;
}

@model Web.Areas.Employee.Models.ViewModels.CustomerViewModels.Edit

@{
    for (int i = 0; i < covs.Count; i++)
    {
        <div class="col-md-4 pull-right">
                <label class="control-label">@covs[i].povOptionName</label>
                <div class="form-group">
                    @{
                        string covId = $"CustomersOptionValues[{i}].id";
                        string optionId = $"CustomersOptionValues[{i}].option_id";
                        if (covs[i].povValueName == null)
                        {
                            string strValue = $"CustomersOptionValues[{i}].strValue";
                            <input type="hidden" name="@covId" value="@covs[i].povId" />
                            <input type="text" name="@strValue" id="" class="form-control" value="@covs[i].povStrValue" />
                            <input type="hidden" name="@optionId" value="@covs[i].povOptionId" />
                        }
                        else
                        {
                            string valueId = $"CustomersOptionValues[{i}].value_id";
                            <input type="hidden" name="@covId" value="@covs[i].povId" />
                            <input type="hidden" name="@optionId" value="@covs[i].povOptionId" />
                            <select class="form-control" name="@valueId" id="" @(covs[i].isRequired ? "required" : "") title="این فیلد را پر کنید">
                                <option value="">انتخاب کنید</option>
                                @{
                                    foreach (var item in dynamics.Where(x => x.optionId == covs[i].povOptionId).ToList())
                                    {
                                        if (item.values.id == covs[i].povValueId)
                                        {
                                            <option value="@item.values.id" selected>@item.values.name</option>
                                        }
                                        else
                                        {
                                            <option value="@item.values.id">@item.values.name</option>
                                        }
                                    }
                                }
                            </select>
                        }
                    }
                </div>

            </div>
    }
    
}

<div id="divSetDynamic"></div>





@*<div id="myModal" class="modal fade" role="dialog">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <h4 class="modal-title">خصوصیات</h4>
                </div>
                <div class="modal-body">
                    <div class="col-md-9 col-sm-9 col-xs-12">
                        <select class="form-control" id="selDropDown" required>
                            <option value="">انتخاب کنید</option>
                        </select>
                    </div>
                    <div class="clearfix"></div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-default" data-dismiss="modal">بستن</button>
                </div>
            </div>
        </div>
    </div>*@

<link href="~/Content/DataTables/datatables.css" rel="stylesheet" />
<script src="~/Scripts/jquery-3.3.1.min.js"></script>
<script src="~/Scripts/bootstrap.min.js"></script>
<script src="~/Scripts/sweetalert2.all.min.js"></script>
<script src="~/Content/DataTables/datatables.js"></script>
<script>
    $(function () {
        $('table#tblDynamic').DataTable();
    })
    var povId = 1;
    //$('button#btnEdit').click(function () {
    //    var btn = $(this);
    //    povId = btn.attr('povId');

    //    if (btn.attr('isString') == 'True') {

    //        Swal.fire({
    //            title: 'متن جاگزینی',
    //            input: 'text',
    //            inputAttributes: {
    //                autocapitalize: 'off'
    //            },
    //            showCancelButton: true,
    //            cancelButtonText:'خروج',
    //            confirmButtonText: 'ثبت',
    //            showLoaderOnConfirm: true,
    //            allowOutsideClick: () => !Swal.isLoading()
    //        }).then((result) => {
    //            if (result.value) {
    //                jQuery.post('/Employee/Customers/EditOptionValueAjax',
    //                    { id: povId, value: result.value },
    //                    function (value) {
    //                        if (value) {
    //                            Swal.fire(
    //                                'موفق',
    //                                'با موفقیت ثبت شد.',
    //                                'succuss'
    //                            ).then((result) => {
    //                                if (result.value) {
    //                                    location.reload();
    //                                }
    //                            });
    //                        }
    //                        if (value == 'not found') {
    //                            Swal.fire(
    //                                'خطا',
    //                                'لطفا دوباره تلاش کنیدداده مورد نظر یافت نشد',
    //                                'warning'
    //                            );
    //                        }
    //                    });
    //            } else {
    //                Swal.fire(
    //                    'خطا',
    //                    'لطفا دوباره تلاش کنید.',
    //                    'warning'
    //                );
    //            }
    //        })
    //        btn.addClass("disabled");
    //        btn.prop("disabled", "disabled");
    //    }
    //    if (btn.attr('isString') == 'False') {
    //        jQuery.post('/Employee/ProductOptionValue/GetDropDownByIdAjax',
    //            { optionId: btn.attr('optionId') },
    //            function (value) {
    //                $.each(value,
    //                    function (index, data) {
    //                        $('select#selDropDown').append('<option value="' + data.id + '">' + data.value + '</option>');
    //                    });
    //            });
    //        $("#myModal").modal();
    //        btn.addClass("disabled");
    //        btn.prop("disabled", "disabled");
    //    }

    //});
    //$('select#selDropDown').on('change',
    //    function () {
    //        var item = $(this);
    //        jQuery.post('/Employee/Customers/EditOptionValueByIdAjax',
    //            { povId: povId, optionValueId: item.val() },
    //            function (value) {
    //                if (value) {
    //                    $("#myModal").modal("hide");
    //                    Swal.fire(
    //                        'پیام',
    //                        'با موفقیت ثبت شد',
    //                        'success'
    //                    ).then((result) => {
    //                        if (result.value) {
    //                            location.reload();
    //                        }
    //                    });
    //                } else {
    //                    Swal.fire(
    //                        'خطا',
    //                        'لطفا دوباره تلاش کنید.',
    //                        'warning'
    //                    );
    //                }
    //            });
    //    });



</script>

